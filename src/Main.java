import java.time.LocalDate;
import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
//  Задача 1.1
//  С помощью цикла while посчитайте, сколько месяцев потребуется, чтобы накопить 2 459 000 рублей при условии,
//  что первоначально мы имеем 0 рублей и готовы откладывать по 15 тысяч рублей.
//  Результат программы должен быть выведен в консоль в формате "Месяц … , сумма накоплений равна … рублей"
//  с тем количеством месяцев, необходимым для накопления данной суммы.
        System.out.println("Задача 1.1");
        float totalAmount = 0f;
        int deposit = 15_000;
        int targetAmount = 2_459_000;
        int percent = 12; // процентов годовых (продолжение задачи из предыдущего урока)

        int month = 0;
        while (totalAmount < targetAmount) {
            totalAmount += deposit;
            totalAmount += totalAmount * percent / 100 / 12f;
            month++;
            System.out.println("Месяц " + month + " - сумма накоплений равна " + totalAmount + " руб.");
        }
        int year = month / 12;
        int remainedMonths = month % 12;
        System.out.println("Для накопления суммы в размере " + targetAmount + " руб. потребуется " + year + " лет " + remainedMonths + " мес.\n");

//  Задача 1.2
//  Выведите в одну строку через пробел числа от 1 до 10, используя цикл while.
//  На следующей строке выведите числа в обратном порядке от 10 до 1, используя оператор for.
//  Для обоих циклов можно использовать как одну общую переменную, так и в каждом цикле свою.
//  Не забудьте выполнить переход на новую строку между двумя циклами.
        System.out.println("Задача 1.2");
        int i = 1;
        while (i <= 10) {
            System.out.print(i + " ");
            i++;
        }
        System.out.print("\n");
        for (i = 10; i >= 1; i--) {
            System.out.print(i + " ");
        }
        System.out.println("\n");

//  Задача 1.3
//  В стране Y население равно 12 миллионам человек.
//  За год рождаемость составляет 17 человек на 1000 человек, смертность - 8 человек. Рассчитайте,
//  какая численность населения будет через 10 лет, принимая во внимание, что показатели рождаемости и смертности постоянны.
//  В консоль выведите результат операции на каждый год в формате "Год …, численность населения составляет … "
        System.out.println("Задача 1.3");
        int population = 12_000_000;
        int birthRate = 17; // на 1000 человек
        int deathRate = 8; // на 1000 человек
        int period = 10; // лет

        for (i = 1; i <= period; i++) {
            population = population + (population * birthRate / 1000) - (population * deathRate / 1000);
            System.out.println("Год " + i + " - численность населения составляет " + population + " человек.");
        }
        System.out.println();

//  Задача 2.1
//  Напишите программу, которая выводит в консоль сумму накоплений.
//  Василий решил положить деньги на накопительный счет, где каждый месяц к сумме его вклада добавляется ещё 7%.
//  Первоначальная сумма вклада Василия составляет 15 тысяч рублей.
//  Вычислите и выведите в консоль, сколько месяцев Василию нужно будет копить, чтобы собрать сумму в 12 миллионов рублей
//  при условии, что процент банка от накоплений не меняется, а всегда равен 7%.
//  Выведите в консоль результат программы с указанием суммы накоплений по каждому месяцу.
        System.out.println("Задача 2.1");
        int bankDeposit = 15_000;
        int percentPerMonth = 7;
        int targetSum = 12_000_000;

        month = 0;
        while (bankDeposit <= targetSum) {
            bankDeposit += bankDeposit * percentPerMonth / 100;
            month++;
            System.out.println("Месяц " + month + " - сумма накоплений составляет " + bankDeposit + " рублей.");
        }
        System.out.println("Для накопления суммы в размере " + targetSum + " рублей потребуется " + month + " мес.\n");

//  Задача 2.2
//  Видоизмените программу таким образом, чтобы в консоль выводились не все месяцы подряд, а только каждый шестой.
//  Должны быть видны накопления за 6, 12, 18, 24 и далее месяцы.
        System.out.println("Задача 2.2");
        bankDeposit = 15_000;

        month = 0;
        while (bankDeposit <= targetSum) {
            bankDeposit += bankDeposit * percentPerMonth / 100;
            month++;
            if (month % 6 == 0) {
            System.out.println("Месяц " + month + " - сумма накоплений составит " + bankDeposit + " руб.");}
        }
        System.out.println("\n");

//  Задача 2.3
//  Василий решил копить деньги ближайшие 9 лет. И он хочет знать, какой будет сумма его накоплений каждые полгода на протяжении этих 9 лет.
//  Исходная сумма всё так же 15 тысяч рублей, проценты банка – 7% ежемесячно.
//  Напишите программу, которая будет выводить Василию сумму его накоплений за следующие каждые полгода в течение 9 лет.
        System.out.println("Задача 2.3");
        bankDeposit = 15_000;
        int depositPeriod = 9;
        int depositPeriodInMonths = depositPeriod * 12;

        for (i = 1; i <= depositPeriodInMonths; i++) {
            bankDeposit += bankDeposit * percentPerMonth / 100;
            if (i % 6 == 0) {
                System.out.println("Месяц " + i + " - сумма накоплений составит " + bankDeposit + " руб.");}
        }
        System.out.println("За " + depositPeriod + " лет сумма накоплений составит " + bankDeposit + " руб.\n");

//  Задача 2.4
//  В вашей компании пятница является днем отчетным.
//  Нам нужно написать программу, которая считает дни месяца по датам, определяет, какой день пятница,
//  и выводит сообщение с напоминанием, что нужно подготовить еженедельный отчет.
//  Создайте переменную типа int, которая хранит в себе номер первой пятницы месяца (число от 1 до 7).
//  Выведите на каждую пятницу месяца (включая полученную) сообщение следующего вида:
//  "Сегодня пятница, ...-е число. Необходимо подготовить отчет."
//  В нашем месяце 31 день. В результате у вас должно вывестись от 4 до 5 сообщений с напоминаниями по разным датам.
        System.out.println("Задача 2.4");
        Scanner scanner = new Scanner(System.in);
        System.out.print("Введите число, соответствующее первой пятнице месяца: ");
        int firstFriday = scanner.nextInt();
        for (int k = firstFriday; k <= 31; k+=7) {
            if (firstFriday > 0 && firstFriday <= 7) {
                System.out.printf("Сегодня пятница, %s-е число. Необходимо подготовить отчет.\n", k);
            } else {
                System.out.println("Введите корректное число.");
                break;
            }
        } System.out.println();

//  Задача 3.1
//  Мы решили написать астрономическое приложение, которое считает, когда над Землей пролетают кометы и их можно будет увидеть.
//  Для начала нам нужно посчитать траекторию движения кометы, которая пролетает рядом с Землей каждый 79-й год, начиная с нулевого.
//  Нам нужно узнать, в каких годах комета пролетала рядом с Землей за последние 200 лет и когда мы увидим ее в следующий раз.
//  В консоль нужно вывести все годы за последние 200 лет, когда появлялась комета, а также следующий год ее появления.
//  Для вычисления периода можно создать две дополнительные переменные, которые содержат год за 200 лет до текущего
//  (из созданной ранее переменной) в качестве старта и 100 лет после в качестве завершения периода расчета.
        System.out.println("Задача 3.1");
        int cometYear = 0;
        int cometPeriod = 79;
        int currentYear = LocalDate.now().getYear();
        int startPeriod = currentYear - 200;
        int endPeriod = currentYear + 100;

        while (cometYear < endPeriod) {
            cometYear += cometPeriod;
            for (int j = startPeriod; j <= endPeriod; j++) {
                if (j == cometYear && j <= currentYear) {
                    System.out.println("Комета пролетала рядом с Землей в " + j + " году.");
                } else if (j == cometYear && j > currentYear) {
                    System.out.println("В следующий раз комета пролетит рядом с Землей в " + j + " году.");
                }
            }
        }
        System.out.println();

//  Задача 3.2
//  Напишите программу, которая выводит в консоль таблицу умножения на 2.
        System.out.println("Задача 3.2");
        int multiplier = 2;
        for (int l = 1; l <= 10; l++) {
            System.out.println(l + " * " + multiplier + " = " + (l * multiplier));
        }
    }
}